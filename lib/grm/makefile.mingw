ifeq ($(strip $(THIRDPARTYDIR)),)
override THIRDPARTYDIR = $(abspath $(CURDIR)/../../3rdparty/build)
endif

  DEFINES = -DGRDIR=\"$(GRDIR)\" -DNO_GS -DNO_X11 -D_WIN32_WINNT=0x0600 -DBUILDING_DLL
 INCLUDES = -I. -I../gks -I../gr -I../gr3 -I$(THIRDPARTYDIR)/include
   CFLAGS = $(DEFINES) $(INCLUDES)
  GKSLIBS = -L ../gks/ -lGKS
   GRLIBS = -L ../gr/ -lGR
  GR3LIBS = -L ../gr3/ -lGR3
  LDFLAGS = -Wl,--out-implib,$(@:.dll=.a)
     LIBS = $(GR3LIBS) $(GRLIBS) $(GKSLIBS) -lm -lws2_32 -lmsimg32 -lgdi32

OBJS = args.o base64.o bson.o datatype/double_map.o datatype/string_array_map.o datatype/string_list.o datatype/string_map.o \
       datatype/uint_map.o dump.o dynamic_args_array.o error.o event.o interaction.o json.o logging.o memwriter.o \
	   net.o plot.o util.o


.SUFFIXES: .o .c

default: all

all: libGRM.dll libGRM.lib

.c.o:
	$(CC) -o $@ -c $(INCLUDES) $(CFLAGS) $<

libGRM.lib: $(OBJS)
	$(AR) crs $@ $?

libGRM.dll: $(OBJS)
	$(CC) -shared -o $@ $^ $(LIBS) $(LDFLAGS)

grm.c: grm.h

clean:
	$(RM) libGRM.so
	$(RM) *.o

.PHONY: default all clean
