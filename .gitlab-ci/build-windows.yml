windows-32bit-cross:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/windows-32bit-cross
  before_script:
  - mkdir qt5-runtime-Windows-i686
  - cd qt5-runtime-Windows-i686
  - wget https://gr-framework.org/downloads/3rdparty/qt5-runtime-Windows-i686-mingw81.tar.gz
  - tar xf qt5-runtime-Windows-i686-mingw81.tar.gz
  - cd ..
  script:
  - make -C 3rdparty default extras
      EXTRAS="tiff ogg theora vpx ffmpeg pixman cairo agg xerces-c"
      HOST=i686-w64-mingw32
      ARCHITECTURE=i686
      OS=w64_x86-cross-mingw32
      CC=i686-w64-mingw32-gcc
      CXX=i686-w64-mingw32-g++
      AR=i686-w64-mingw32-ar
      OPENJP2_EXTRA_CMAKE_FLAGS=-DCMAKE_TOOLCHAIN_FILE=`pwd`/cmake/i686-w64-mingw32.cmake
      GLFW_EXTRA_CMAKE_FLAGS=-DCMAKE_TOOLCHAIN_FILE=`pwd`/cmake/i686-w64-mingw32.cmake
      XERCES_C_EXTRA_CMAKE_FLAGS=-DCMAKE_TOOLCHAIN_FILE=`pwd`/cmake/i686-w64-mingw32.cmake
      OGG_EXTRA_CONFIGURE_FLAGS=--host=i686-w64-mingw32
      THEORA_EXTRA_CONFIGURE_FLAGS="--host=i686-w64-mingw32 --disable-asm"
      FFMPEG_EXTRA_CONFIGURE_FLAGS="--cross-prefix=i686-w64-mingw32- --arch=i686 --target-os=mingw32 --pkg-config=pkg-config"
      PIXMAN_EXTRA_CONFIGURE_FLAGS=--host=i686-w64-mingw32
      CAIRO_EXTRA_CONFIGURE_FLAGS=--host=i686-w64-mingw32
      TIFF_EXTRA_CONFIGURE_FLAGS=--host=i686-w64-mingw32
      OPENH264_EXTRA_MAKE_FLAGS="OS=mingw_nt ARCH=i386 CFLAGS=-fno-exceptions CXXFLAGS=-fno-exceptions LDFLAGS=-fno-exceptions"
  - cmake
      -S .
      -B build
      -DCMAKE_BUILD_TYPE=Release
      -DCMAKE_INSTALL_PREFIX=/usr/local/gr
      -DCMAKE_TOOLCHAIN_FILE="${CI_PROJECT_DIR}/cmake/i686-w64-mingw32.cmake"
      -DCMAKE_MODULE_PATH=${CI_PROJECT_DIR}/qt5-runtime-Windows-i686/cmake
      -DGR_MANUAL_MOC_AND_RCC=ON
      -DGR_USE_BUNDLED_LIBRARIES=ON
  - cmake --build build
  - DESTDIR="${CI_PROJECT_DIR}/install"
    cmake --install build
  - mv qt5-runtime-Windows-i686/*.dll install/usr/local/gr/bin/
  - mv qt5-runtime-Windows-i686/platforms install/usr/local/gr/bin/platforms
  - cp /usr/lib/gcc/i686-w64-mingw32/10-win32/libgcc_s_dw2-1.dll install/usr/local/gr/bin/
  - mv ./install/usr/local/gr artifacts-windows-32bit
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-windows-32bit/

windows-64bit-cross:
  stage: build
  image: iffregistry.fz-juelich.de/docker-images/gr-build-images/windows-64bit-cross
  before_script:
  - mkdir qt5-runtime-Windows-x86_64
  - cd qt5-runtime-Windows-x86_64
  - wget https://gr-framework.org/downloads/3rdparty/qt5-runtime-Windows-x86_64-mingw81.tar.gz
  - tar xf qt5-runtime-Windows-x86_64-mingw81.tar.gz
  - cd ..
  script:
  - make -C 3rdparty default extras
      EXTRAS="tiff ogg theora vpx openh264 ffmpeg pixman cairo agg xerces-c"
      HOST=x86_64-w64-mingw32
      ARCHITECTURE=x86_64
      OS=w64_amd64-cross-mingw32
      CC=x86_64-w64-mingw32-gcc
      CXX=x86_64-w64-mingw32-g++
      AR=x86_64-w64-mingw32-ar
      OPENJP2_EXTRA_CMAKE_FLAGS=-DCMAKE_TOOLCHAIN_FILE=`pwd`/cmake/x86_64-w64-mingw32.cmake
      GLFW_EXTRA_CMAKE_FLAGS=-DCMAKE_TOOLCHAIN_FILE=`pwd`/cmake/x86_64-w64-mingw32.cmake
      XERCES_C_EXTRA_CMAKE_FLAGS=-DCMAKE_TOOLCHAIN_FILE=`pwd`/cmake/x86_64-w64-mingw32.cmake
      OGG_EXTRA_CONFIGURE_FLAGS=--host=x86_64-w64-mingw32
      THEORA_EXTRA_CONFIGURE_FLAGS=--host=x86_64-w64-mingw32
      FFMPEG_EXTRA_CONFIGURE_FLAGS="--cross-prefix=x86_64-w64-mingw32- --arch=x86_64 --target-os=mingw32 --pkg-config=pkg-config"
      PIXMAN_EXTRA_CONFIGURE_FLAGS=--host=x86_64-w64-mingw32
      CAIRO_EXTRA_CONFIGURE_FLAGS=--host=x86_64-w64-mingw32
      TIFF_EXTRA_CONFIGURE_FLAGS=--host=x86_64-w64-mingw32
      OPENH264_EXTRA_MAKE_FLAGS=OS=mingw_nt
  - cmake
      -S .
      -B build
      -DCMAKE_BUILD_TYPE=Release
      -DCMAKE_INSTALL_PREFIX=/usr/local/gr
      -DCMAKE_TOOLCHAIN_FILE="${CI_PROJECT_DIR}/cmake/x86_64-w64-mingw32.cmake"
      -DCMAKE_MODULE_PATH=${CI_PROJECT_DIR}/qt5-runtime-Windows-x86_64/cmake
      -DGR_MANUAL_MOC_AND_RCC=ON
      -DGR_USE_BUNDLED_LIBRARIES=ON
  - cmake --build build
  - DESTDIR="${CI_PROJECT_DIR}/install"
    cmake --install build
  - mv qt5-runtime-Windows-x86_64/*.dll install/usr/local/gr/bin/
  - mv qt5-runtime-Windows-x86_64/platforms install/usr/local/gr/bin/platforms
  - cp /usr/lib/gcc/x86_64-w64-mingw32/10-win32/libgcc_s_seh-1.dll install/usr/local/gr/bin/
  - mv ./install/usr/local/gr artifacts-windows-64bit
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-windows-64bit/

windows-64bit-msvc:
  stage: build
  image: windows:10-gr-build
  tags:
  - libvirt
  script:
  - vcvars_cmd cmake
      -S .
      -B build
      -DCMAKE_INSTALL_PREFIX=/c/gr
      -DGR_USE_BUNDLED_LIBRARIES=OFF
  - vcvars_cmd cmake --build build --config Release
  - vcvars_cmd cmake --install build --config Release
  - cd /c/Qt6/6.8.1/msvc2022_64/bin
  - cp -v Qt6Core.dll Qt6Gui.dll Qt6Widgets.dll Qt6Network.dll /c/gr/bin/
  - cd -
  - cd /c/gr/bin
  - mkdir -p platforms
  - cp -v /c/Qt6/6.8.1/msvc2022_64/plugins/platforms/qwindows.dll platforms/
  - cd -
  - cd /c/local/bin
  - cp -v cairo.dll freetype.dll jpeg62.dll libpng16.dll pixman-1-0.dll qhull_r.dll tiff.dll tiffxx.dll turbojpeg.dll xerces-c_3_2.dll zlib.dll /c/gr/bin/
  - cd -
  - cp -v "/c/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/Redist/MSVC/14.31.31103/x64/Microsoft.VC143.CRT/vcruntime140.dll" /c/gr/bin/
  - cp -v "/c/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/Redist/MSVC/14.31.31103/x64/Microsoft.VC143.CRT/vcruntime140_1.dll" /c/gr/bin/
  - cp -v "/c/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/Redist/MSVC/14.31.31103/x64/Microsoft.VC143.CRT/msvcp140.dll" /c/gr/bin/
  - cp -v "/c/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/Redist/MSVC/14.31.31103/x64/Microsoft.VC143.CRT/msvcp140_1.dll" /c/gr/bin/
  - cp -v "/c/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/Redist/MSVC/14.31.31103/x64/Microsoft.VC143.CRT/msvcp140_2.dll" /c/gr/bin/
  - mv /c/gr artifacts-windows-64bit-msvc
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-windows-64bit-msvc/
